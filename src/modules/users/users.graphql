# ---------------------------------- Querys ---------------------------------- #
type Query {
  users(input: SearchUserInput, filter: SearchUserFilter): [User]!
  getMe: User!
}

# --------------------------------- Mutations -------------------------------- #
type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  editUser(id: ID!, editUserInput: EditUserInput!): User!
  deleteUser(id: ID!): Boolean!
}

# -------------------------------- Input types ------------------------------- #
input CreateUserInput {
  firstName: String!
  lastName: String!
  mobilePhone: String!
  email: String!
  login: String
  password: String!
  role: Roles
}

input EditUserInput {
  firstName: String
  lastName: String
  mobilePhone: String
  email: String
  password: String
  role: Roles
}

input SearchUserInput {
  firstName: String
  lastName: String
  email: String
  mobilePhone: String
}

input SearchUserFilter {
  roles: [Roles]
  createdAt: Date
}

# --------------------------------- Entities --------------------------------- #
type User {
  id: ID!
  firstName: String!
  lastName: String!
  mobilePhone: String!
  email: String!
  login: String!
  role: String!
  #roleInfo: RolesInfo!
  createdAt: String!
}

# ----------------------------------- Enums ---------------------------------- #
enum Roles {
  GUEST
  PATIENT
  DOCTOR
  ADMIN
}

# ---------------------------------- Unions ---------------------------------- #
union RolesInfo = Patient | Doctor
